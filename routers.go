/*
 * FeedFlow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.3.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"strings"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// RouteAPI returns a new router.
func RouteAPI(router *gin.Engine) *gin.Engine {
	for _, route := range routes {
		switch route.Method {
		case "GET":
			router.GET(route.Pattern, route.HandlerFunc)
		case "POST":
			router.POST(route.Pattern, route.HandlerFunc)
		case "PUT":
			router.PUT(route.Pattern, route.HandlerFunc)
		case "DELETE":
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

var routes = Routes{
	{
		"RequestChunk",
		strings.ToUpper("Get"),
		"/api/feed/request",
		RequestChunk,
	},

	{
		"Add",
		strings.ToUpper("Post"),
		"/api/pages/add",
		Add,
	},

	{
		"ImgUpload",
		strings.ToUpper("Post"),
		"/api/pages/img/upload/",
		ImgUpload,
	},

	{
		"Login",
		strings.ToUpper("Post"),
		"/api/pages/login",
		Login,
	},

	{
		"Remove",
		strings.ToUpper("Delete"),
		"/api/pages/remove",
		Remove,
	},

	{
		"Signin",
		strings.ToUpper("Post"),
		"/api/pages/signin",
		Signin,
	},
}
